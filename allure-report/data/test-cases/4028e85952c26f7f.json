{"uid":"4028e85952c26f7f","name":"test_health_endpoints","fullName":"backend.test_endpoint#test_health_endpoints","historyId":"e812a4e46498ba2ad8190ca3919e76e2","time":{"start":1759507945765,"stop":1759507945802,"duration":37},"status":"failed","statusMessage":"AssertionError: assert ({'status': 'healthy'} == {'status': 'ok'}\n  \n  Differing items:\n  \u001B[0m{\u001B[33m'\u001B[39;49;00m\u001B[33mstatus\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m: \u001B[33m'\u001B[39;49;00m\u001B[33mhealthy\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m}\u001B[90m\u001B[39;49;00m != \u001B[0m{\u001B[33m'\u001B[39;49;00m\u001B[33mstatus\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m: \u001B[33m'\u001B[39;49;00m\u001B[33mok\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m}\u001B[90m\u001B[39;49;00m\n  Use -v to get more diff or False)\n +  where False = <built-in method startswith of str object at 0x000001D1878243B0>('ok')\n +    where <built-in method startswith of str object at 0x000001D1878243B0> = '{\"status\":\"healthy\"}'.startswith\n +      where '{\"status\":\"healthy\"}' = <built-in method lower of str object at 0x000001D1877277F0>()\n +        where <built-in method lower of str object at 0x000001D1877277F0> = '{\"status\":\"healthy\"}'.lower\n +          where '{\"status\":\"healthy\"}' = <Response [200 OK]>.text","statusTrace":"@pytest.mark.asyncio\n    async def test_health_endpoints():\n        async with httpx.AsyncClient(transport=ASGITransport(app=app), base_url=\"http://test\") as client:\n            resp = await client.get(\"/health\")\n            assert resp.status_code == 200\n>           assert resp.json() == {\"status\": \"ok\"} or resp.text.lower().startswith(\"ok\")\nE           assert ({'status': 'healthy'} == {'status': 'ok'}\nE             \nE             Differing items:\nE             \u001B[0m{\u001B[33m'\u001B[39;49;00m\u001B[33mstatus\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m: \u001B[33m'\u001B[39;49;00m\u001B[33mhealthy\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m}\u001B[90m\u001B[39;49;00m != \u001B[0m{\u001B[33m'\u001B[39;49;00m\u001B[33mstatus\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m: \u001B[33m'\u001B[39;49;00m\u001B[33mok\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m}\u001B[90m\u001B[39;49;00m\nE             Use -v to get more diff or False)\nE            +  where False = <built-in method startswith of str object at 0x000001D1878243B0>('ok')\nE            +    where <built-in method startswith of str object at 0x000001D1878243B0> = '{\"status\":\"healthy\"}'.startswith\nE            +      where '{\"status\":\"healthy\"}' = <built-in method lower of str object at 0x000001D1877277F0>()\nE            +        where <built-in method lower of str object at 0x000001D1877277F0> = '{\"status\":\"healthy\"}'.lower\nE            +          where '{\"status\":\"healthy\"}' = <Response [200 OK]>.text\n\nbackend\\test_endpoint.py:12: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1759507945518,"stop":1759507945518,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"_function_scoped_runner","time":{"start":1759507945762,"stop":1759507945764,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"afterStages":[{"name":"_function_scoped_runner::0","time":{"start":1759507945959,"stop":1759507945960,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"tag","value":"asyncio"},{"name":"parentSuite","value":"backend"},{"name":"suite","value":"test_endpoint"},{"name":"host","value":"סלווא_נעום"},{"name":"thread","value":"17388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"backend.test_endpoint"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["asyncio"]},"source":"4028e85952c26f7f.json","parameterValues":[]}